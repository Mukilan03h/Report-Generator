[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "daily-report-generator"
version = "0.1.0"
description = "A Streamlit application for generating daily reports using Google's Gemini API"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Text Processing :: General",
    "Topic :: Utilities",
]
dependencies = [
    "streamlit>=1.32.0",
    "google-generativeai>=0.3.2",
    "python-dotenv>=1.0.1",
    "python-dateutil>=2.9.0",
    "PyYAML>=6.0.1",
    "pandas>=2.2.1",
    "markdown>=3.5.2",
    "python-docx>=1.1.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "flake8-black>=0.3.6",
    "flake8-isort>=6.0.0",
    "mkdocs>=1.4.3",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
    "pre-commit>=3.0.0",
    "pylint>=2.17.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/daily-report-generator"
Documentation = "https://github.com/yourusername/daily-report-generator#readme"
Issues = "https://github.com/yourusername/daily-report-generator/issues"
Source = "https://github.com/yourusername/daily-report-generator"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["report_generator*"]

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src"]
omit = ["**/__init__.py", "**/tests/*"]

[tool.coverage.report]
fail_under = 80
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.mkdocs]
site_name = "Daily Report Generator"
site_url = "https://yourusername.github.io/daily-report-generator"
site_author = "Your Name"
site_description = "A Streamlit application for generating daily reports using Google's Gemini API"
theme = "material"

[project.scripts]
report-generator = "report_generator.app:main"
